name: Build ARM AppImage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Pozwala na rÄ™czne uruchomienie

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Clear npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install --force --legacy-peer-deps
        
    - name: Install Linux-only dependencies
      run: |
        echo "Installing Linux-specific packages..."
        npm install socketcan@4.0.5 --save-optional || echo "socketcan skipped"
        npm install socketmost@2.0.6 --save-optional || echo "socketmost skipped"
        
    - name: Build application
      run: |
        echo "Node version:"
        node --version
        echo "NPM version:"
        npm --version  
        echo "Building application (skip typecheck)..."
        npm run build:skip-typecheck
        
    - name: Build ARM64 AppImage
      run: |
        echo "Building ARM64 AppImage..."
        npm run build:armLinux
        echo "Build completed, checking files:"
        ls -la dist/ || echo "No dist directory found"
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: react-carplay-arm64
        path: dist/*.AppImage
        
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
